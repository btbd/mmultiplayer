#pragma once

class Trainer : public Addon {
public:
	typedef struct {
		struct {
			unsigned long bExludeHandMoves; unsigned long bExludeFootMoves; unsigned long bPhysXMutatable; unsigned long bStatic; unsigned long bHidden; unsigned long bNoDelete; unsigned long bDeleteMe; unsigned long bTicked; unsigned long bOnlyOwnerSee; unsigned long bStasis; unsigned long bWorldGeometry; unsigned long bIgnoreRigidBodyPawns; unsigned long bOrientOnSlope; unsigned long bIgnoreEncroachers; unsigned long bPushedByEncroachers; unsigned long bDestroyedByInterpActor; unsigned long bRouteBeginPlayEvenIfStatic; unsigned long bIsMoving; unsigned long bAlwaysEncroachCheck; unsigned long bHasAlternateTargetLocation; unsigned long bNetTemporary; unsigned long bOnlyRelevantToOwner; unsigned long bNetDirty; unsigned long bAlwaysRelevant; unsigned long bReplicateInstigator; unsigned long bReplicateMovement; unsigned long bSkipActorPropertyReplication; unsigned long bUpdateSimulatedPosition; unsigned long bTearOff; unsigned long bOnlyDirtyReplication; unsigned long bDemoRecording; unsigned long bDemoOwner; unsigned long bForceDemoRelevant; unsigned long bNetInitialRotation; unsigned long bReplicateRigidBodyLocation; unsigned long bKillDuringLevelTransition; unsigned long bExchangedRoles; unsigned long bConsiderAllStaticMeshComponentsForStreaming; unsigned long bIgnoreForAITraces; unsigned long bInteractable; unsigned long bLOIObject; unsigned long bDebug; unsigned long bPostRenderIfNotVisible; unsigned long bForceNetUpdate; unsigned long bPendingNetUpdate; unsigned long bHardAttach; unsigned long bIgnoreBaseRotation; unsigned long bShadowParented; unsigned long bCanBeAdheredTo; unsigned long bCanBeFrictionedTo; unsigned long bHurtEntry; unsigned long bGameRelevant; unsigned long bMovable; unsigned long bDestroyInPainVolume; unsigned long bCanBeDamaged; unsigned long bShouldBaseAtStartup; unsigned long bPendingDelete; unsigned long bCanTeleport; unsigned long bAlwaysTick; unsigned long bBlocksNavigation; unsigned long BlockRigidBody; unsigned long bCollideWhenPlacing; unsigned long bCollideActors; unsigned long bCollideWorld; unsigned long bCollideComplex; unsigned long bBlockActors; unsigned long bProjTarget; unsigned long bBlocksTeleport; unsigned long bNoEncroachCheck; unsigned long bPhysRigidBodyOutOfWorldCheck; unsigned long bComponentOutsideWorld; unsigned long bBounce; unsigned long bJustTeleported; unsigned long bNetInitial; unsigned long bNetOwner; unsigned long bHiddenEd; unsigned long bHiddenEdGroup; unsigned long bHiddenEdCustom; unsigned long bEdShouldSnap; unsigned long bTempEditor; unsigned long bPathColliding; unsigned long bPathTemp; unsigned long bScriptInitialized; unsigned long bLockLocation; float CustomTimeDilation; Classes::TEnumAsByte<Classes::EPhysics> Physics; Classes::TEnumAsByte<Classes::ENetRole> RemoteRole; Classes::TEnumAsByte<Classes::ENetRole> Role; Classes::TEnumAsByte<Classes::ECollisionType> CollisionType; Classes::TEnumAsByte<Classes::ETickingGroup> TickGroup; int NetTag; float NetUpdateTime; float NetUpdateFrequency; float NetPriority; float LastNetUpdateTime; float LifeSpan; float CreationTime; float LastRenderTime; float LatentFloat; Classes::FVector Location; Classes::FRotator Rotation; Classes::FVector Velocity; Classes::FVector Acceleration; Classes::FVector AngularVelocity; Classes::FVector RelativeLocation; Classes::FRotator RelativeRotation; float DrawScale; Classes::FVector DrawScale3D; Classes::FVector PrePivot; int OverlapTag; Classes::FRotator RotationRate; Classes::FRotator DesiredRotation; float MinDistForNetRBCorrection; float MaxStepHeight; float MaxJumpHeight; float WalkableFloorZ; float NetRelevancyTime; unsigned long bUpAndOut; unsigned long bIsWalking; unsigned long bWantsToCrouch; unsigned long bIsCrouched; unsigned long bTryToUncrouch; unsigned long bCanCrouch; unsigned long bCrawler; unsigned long bReducedSpeed; unsigned long bJumpCapable; unsigned long bCanJump; unsigned long bCanWalk; unsigned long bCanSwim; unsigned long bCanFly; unsigned long bCanClimbLadders; unsigned long bCanStrafe; unsigned long bAvoidLedges; unsigned long bStopAtLedges; unsigned long bSimulateGravity; unsigned long bIgnoreForces; unsigned long bCanWalkOffLedges; unsigned long bCanBeBaseForPawns; unsigned long bSimGravityDisabled; unsigned long bDirectHitWall; unsigned long bPushesRigidBodies; unsigned long bForceFloorCheck; unsigned long bForceKeepAnchor; unsigned long bCanMantle; unsigned long bCanClimbCeilings; unsigned long bCanSwatTurn; unsigned long bCanLeap; unsigned long bCanCoverSlip; unsigned long bDisplayPathErrors; unsigned long bIsFemale; unsigned long bCanPickupInventory; unsigned long bAmbientCreature; unsigned long bLOSHearing; unsigned long bMuffledHearing; unsigned long bDontPossess; unsigned long bAutoFire; unsigned long bRollToDesired; unsigned long bStationary; unsigned long bCachedRelevant; unsigned long bSpecialHUD; unsigned long bNoWeaponFiring; unsigned long bCanUse; unsigned long bModifyReachSpecCost; unsigned long bPathfindsAsVehicle; unsigned long bRunPhysicsWithNoController; unsigned long bForceMaxAccel; unsigned long bForceRMVelocity; unsigned long bForceRegularVelocity; unsigned long bPlayedDeath; float UncrouchTime; float CrouchHeight; float CrouchRadius; int FullHeight; float NonPreferredVehiclePathMultiplier; Classes::TEnumAsByte<Classes::EPathSearchType> PathSearchType; unsigned char RemoteViewPitch; unsigned char FlashCount; unsigned char FiringMode; float DesiredSpeed; float MaxDesiredSpeed; float HearingThreshold; float Alertness; float SightRadius; float PeripheralVision; float AvgPhysicsTime; float Mass; float Buoyancy; float MeleeRange; float FindAnchorFailedTime; float LastValidAnchorTime; float DestinationOffset; float NextPathRadius; Classes::FVector SerpentineDir; float SerpentineDist; float SerpentineTime; float SpawnTime; int MaxPitchLimit; float GroundSpeed; float WaterSpeed; float AirSpeed; float LadderSpeed; float AccelRate; float JumpZ; float OutofWaterZ; float MaxOutOfWaterStepHeight; float AirControl; float WalkingPct; float CrouchedPct; float MaxFallSpeed; float AIMaxFallSpeedFactor; float BaseEyeHeight; float EyeHeight; Classes::FVector Floor; float SplashTime; float OldZ; int Health; int HealthMax; float BreathTime; float UnderWaterTime; float LastPainTime; Classes::FVector RMVelocity; Classes::FVector noise1spot; float noise1time; float noise1loudness; Classes::FVector noise2spot; float noise2time; float noise2loudness; float SoundDampening; float DamageScaling; float LastStartTime; Classes::FVector TakeHitLocation; Classes::FVector TearOffMomentum; float RBPushRadius; float RBPushStrength; float AlwaysRelevantDistanceSquared; float VehicleCheckRadius; float ViewPitchMin; float ViewPitchMax; int AllowedYawError; Classes::FVector FlashLocation; Classes::FVector LastFiringFlashLocation; int ShotCount; int FailedLandingCount; unsigned long bDisableSkelControlSpring; unsigned long bCanUnCrouch; unsigned long bConstrainLook; unsigned long bGoingForward; unsigned long bClimbLeftHand; unsigned long bClimbDownFast; unsigned long bEnableFootPlacement; unsigned long bMoveActionMax; unsigned long bFoundLedgeExcludesHandMoves; unsigned long bFoundLedgeExcludesFootMoves; unsigned long bIsWallWalking; unsigned long bFoundLedge; unsigned long bAllowMoveChange; unsigned long bSRPauseTimer; unsigned long bForceMaxAccelOneFrame; unsigned long RollTriggerPressed; unsigned long bUncontrolledSlide; unsigned long bIsPlayingSlideEffect; unsigned long bAlternateSound; unsigned long bCharacterInhaling; unsigned long bDisableCharacterSounds; unsigned long bTakeFallDamage; unsigned long bIsUsingRootMotion; unsigned long bIsUsingRootRotation; unsigned long bDebugDamage; unsigned long bDebugNetAnim; unsigned long bNoMoveAnims; unsigned long bDebugAcceleration; unsigned long bDebugJumping; unsigned long bDebugMovement; unsigned long bDebugPlotPath; unsigned long bDebugFootsteps; unsigned long bDebugSlapBack; unsigned long bDebugCharacterSounds; unsigned long bDebugBreathingSounds; unsigned long bDebugWeapons; unsigned long bDebugMaterials; float VelocityMagnitude2D; float VelocityMagnitude; Classes::FVector VelocityDir2D; Classes::FVector VelocityDir; float FaceRotationTimeLeft; float BecameReadyTime; float AmountTilUnarmed; float GravityModifier; float GravityModifierTimer; Classes::TEnumAsByte<Classes::EAgainstWallState> AgainstWallState; Classes::TEnumAsByte<Classes::EWeaponAnimState> WeaponAnimState; unsigned char AnimLockRefCount; unsigned char RootMotionRefCount; Classes::TEnumAsByte<Classes::EGrabTurnType> CurrentGrabTurnType; unsigned char LadderType; Classes::TEnumAsByte<Classes::EMovement> AnimationMovementState; Classes::TEnumAsByte<Classes::EMovement> PendingAnimationMovementState; Classes::TEnumAsByte<Classes::EMovement> OldMovementState; Classes::TEnumAsByte<Classes::EMovement> PendingMovementState; Classes::TEnumAsByte<Classes::EMovement> MovementState; Classes::TEnumAsByte<Classes::EMovement> ReplicatedMovementState; Classes::TEnumAsByte<Classes::EMovement> AIAimOldMovementState; Classes::TEnumAsByte<Classes::EWalkingState> OverrideWalkingState; Classes::TEnumAsByte<Classes::EWalkingState> PendingOverrideWalkingState; Classes::TEnumAsByte<Classes::EWalkingState> CurrentWalkingState; unsigned char ReplicateCustomAnimCount; Classes::TEnumAsByte<Classes::EMoveActionHint> MoveActionHint; unsigned char ReloadCount; unsigned char NoOfBreathingSounds; Classes::FVector AgainstWallLeftHand; Classes::FVector AgainstWallRightHand; Classes::FVector AgainstWallNormal; Classes::FRotator MinLookConstraint; Classes::FRotator MaxLookConstraint; float LegRotationSlowTimer; int LegRotation; float LegRotationSpeed; int GoBackLegAngleLimitMin; int GoBackLegAngleLimitMax; int LegAngleLimitFudge; float SneakVelocity; float WalkVelocity; float JogVelocity; float RunVelocity; float SprintVelocity; float AverageSpeed; float ASFilterTime; float ASPollInterval; float ASPollTimer; int ASPollSlots; int ASSlotPointer; float ASDistanceAccum; float NewFloorSmooth; float SmoothOffset; Classes::FRotator FootPlacementStoredRotation; float TargetMeshTranslationZ; float SlideStoppedTimeStamp; Classes::FVector MoveLocation; Classes::FVector MoveNormal; float MaxWallStepHeight; Classes::FVector MoveLedgeLocation; Classes::FVector MoveLedgeNormal; int MoveLedgeResult; Classes::FVector LedgeFindExtent; float LedgeFindDistance; float LedgeFindDepth; Classes::FVector IllegalLedgeNormal; float bIllegalLedgeTimer; int ActiveMoveTimer; int RemoteViewYaw; float EvadeTimer; float SpeedMaxBaseVelocity; float SpeedMinBaseVelocity; float SpeedStrafeVelocityAccelerationFactor; float SpeedWalkVelocityAccelerationFactor; float SpeedSprintVelocityAccelerationFactor; float SpeedEnergyDecelerationTime; float SpeedEnergyDecelerationExponent; float SpeedTurnDecelerationFactor; float SpeedSprintEnergy; float UpwardWalkFrictionScale; float DownwardWalkFrictionScale; float MinWalkFrictionModify; float MaxWalkFrictionModify; float UpwardSlideFrictionScale; float DownwardSlideFrictionScale; float BrakingFrictionStrength; float SoftLockStrength; float RollTriggerTime; Classes::FVector UncontrolledSlideNormal; float FallingUncontrolledHeight; float EnterFallingHeight; float SlideEffectUpdateTimer; float CustomSoundInput; float OverrideSynchPosOffset; float StreakEffectOverride; float StreakEffectDirection; int PatchOne; int PatchTwo; int PatchThree; float PhysicsHitReactionBlendTimer; float PhysicsHitReactionBlendOut; float PhysicsHitReactionBlendInTime; float PhysicsHitReactionBlendOutTime; float PhysicsHitReactionScale; int LastDamageTaken; float ArmorBulletsHead; float ArmorBulletsBody; float ArmorBulletsLegs; float ArmorMeleeHead; float ArmorMeleeBody; float ArmorMeleeLegs; float FootstepTraceLength; float FootstepTraceWidth; float LastFlybyStamp; int MaxHealth; float RegenerateDelay; float RegenerateHealthPerSecond; float UnrealEngineFallDamageScale; float TimeSinceLastDamage; float HealthFrac; float TaserDamageLevel; float RegenerateFromTaserPerSecond; float TaserRegenerateDelay; float TimeSinceLastTaserDamage; float StunDamageLevel; float RegenerateFromStunPerSecond; float MinTimeBeforeRemovingDeadBody; float MaxTimeBeforeRemovingDeadBody; int MyPassengerSeatIndex; float SlideFactor; float LastDamage; float LastDamageTime; float NextDebugPlotTime; Classes::FVector LastPlotLocation; Classes::FVector LastJumpLocation; unsigned long bHasMorphNodes; unsigned long bStuckOnGround; unsigned long bPlayerDiedHoldingTheBag; unsigned long bIsInShadowAlteringMoveState; unsigned long bEnableHairPhysics; unsigned long bLockBase; unsigned long bCutsceneIsSkippable; Classes::TEnumAsByte<Classes::ESceneDepthPriorityGroup> FirstPersonDPG; Classes::TEnumAsByte<Classes::ESceneDepthPriorityGroup> FirstPersonLowerBodyDPG; float VertigoEdgeProbingHeight; float VertigoEdgeProbingDistance; float VertigoEffectThreshold; float EdgeCheckMaxSpeed; float EdgeCheckDistance; float EdgeStopMinHeight; float LastEnemyHitTimeOut; float ReverbVolumeTimer; float ReverbVolumePollTime; float OcclusionDuckLevel; float OcclusionDuckFadeTime; int IndoorSoundGroupIndex; int IndoorMixGroupIndex; int OutdoorMixGroupIndex; float MovementStringAllowedGap; float MovementStringGapTimer; float PlayerBulletDamageMultiplier; Classes::FVector FocusLocation; Classes::FVector PlayerCameraLocation; Classes::FRotator PlayerCameraRotation; int DebugPlayerGraph; float LastDebugGraphValue; int SimulatedBadFPS; float FocusLocationInterpolationSpeed; float LastResetTimeStamp;
		} Pawn;

		struct {
			unsigned long bExludeHandMoves; unsigned long bExludeFootMoves; unsigned long bPhysXMutatable; unsigned long bStatic; unsigned long bHidden; unsigned long bNoDelete; unsigned long bDeleteMe; unsigned long bTicked; unsigned long bOnlyOwnerSee; unsigned long bStasis; unsigned long bWorldGeometry; unsigned long bIgnoreRigidBodyPawns; unsigned long bOrientOnSlope; unsigned long bIgnoreEncroachers; unsigned long bPushedByEncroachers; unsigned long bDestroyedByInterpActor; unsigned long bRouteBeginPlayEvenIfStatic; unsigned long bIsMoving; unsigned long bAlwaysEncroachCheck; unsigned long bHasAlternateTargetLocation; unsigned long bNetTemporary; unsigned long bOnlyRelevantToOwner; unsigned long bNetDirty; unsigned long bAlwaysRelevant; unsigned long bReplicateInstigator; unsigned long bReplicateMovement; unsigned long bSkipActorPropertyReplication; unsigned long bUpdateSimulatedPosition; unsigned long bTearOff; unsigned long bOnlyDirtyReplication; unsigned long bDemoRecording; unsigned long bDemoOwner; unsigned long bForceDemoRelevant; unsigned long bNetInitialRotation; unsigned long bReplicateRigidBodyLocation; unsigned long bKillDuringLevelTransition; unsigned long bExchangedRoles; unsigned long bConsiderAllStaticMeshComponentsForStreaming; unsigned long bIgnoreForAITraces; unsigned long bInteractable; unsigned long bLOIObject; unsigned long bDebug; unsigned long bPostRenderIfNotVisible; unsigned long bForceNetUpdate; unsigned long bPendingNetUpdate; unsigned long bHardAttach; unsigned long bIgnoreBaseRotation; unsigned long bShadowParented; unsigned long bCanBeAdheredTo; unsigned long bCanBeFrictionedTo; unsigned long bHurtEntry; unsigned long bGameRelevant; unsigned long bMovable; unsigned long bDestroyInPainVolume; unsigned long bCanBeDamaged; unsigned long bShouldBaseAtStartup; unsigned long bPendingDelete; unsigned long bCanTeleport; unsigned long bAlwaysTick; unsigned long bBlocksNavigation; unsigned long BlockRigidBody; unsigned long bCollideWhenPlacing; unsigned long bCollideActors; unsigned long bCollideWorld; unsigned long bCollideComplex; unsigned long bBlockActors; unsigned long bProjTarget; unsigned long bBlocksTeleport; unsigned long bNoEncroachCheck; unsigned long bPhysRigidBodyOutOfWorldCheck; unsigned long bComponentOutsideWorld; unsigned long bBounce; unsigned long bJustTeleported; unsigned long bNetInitial; unsigned long bNetOwner; unsigned long bHiddenEd; unsigned long bHiddenEdGroup; unsigned long bHiddenEdCustom; unsigned long bEdShouldSnap; unsigned long bTempEditor; unsigned long bPathColliding; unsigned long bPathTemp; unsigned long bScriptInitialized; unsigned long bLockLocation; float CustomTimeDilation; Classes::TEnumAsByte<Classes::EPhysics> Physics; Classes::TEnumAsByte<Classes::ENetRole> RemoteRole; Classes::TEnumAsByte<Classes::ENetRole> Role; Classes::TEnumAsByte<Classes::ECollisionType> CollisionType; Classes::TEnumAsByte<Classes::ETickingGroup> TickGroup; int NetTag; float NetUpdateTime; float NetUpdateFrequency; float NetPriority; float LastNetUpdateTime; float LifeSpan; float CreationTime; float LastRenderTime; float LatentFloat; Classes::FVector Location; Classes::FRotator Rotation; Classes::FVector Velocity; Classes::FVector Acceleration; Classes::FVector AngularVelocity; Classes::FVector RelativeLocation; Classes::FRotator RelativeRotation; float DrawScale; Classes::FVector DrawScale3D; Classes::FVector PrePivot; int OverlapTag; Classes::FRotator RotationRate; Classes::FRotator DesiredRotation; float MinDistForNetRBCorrection; int PlayerNum; unsigned long bIsPlayer; unsigned long bGodMode; unsigned long bAffectedByHitEffects; unsigned long bSoaking; unsigned long bSlowerZAcquire; unsigned long bForceStrafe; unsigned long bNotifyPostLanded; unsigned long bNotifyApex; unsigned long bAdvancedTactics; unsigned long bCanDoSpecial; unsigned long bAdjusting; unsigned long bPreparingMove; unsigned long bIgnoreMovementFocus; unsigned long bLOSflag; unsigned long bUsePlayerHearing; unsigned long bNotifyFallingHitWall; unsigned long bForceDesiredRotation; unsigned long bPreciseDestination; unsigned long bSeeFriendly; unsigned long bUsingPathLanes; unsigned char bFire; float MinHitWall; float MoveTimer; Classes::FVector Destination; Classes::FVector FocalPoint; Classes::FVector AdjustLoc; Classes::FVector CurrentPathDir; float RouteDist; float LastRouteFind; float GroundPitchTime; Classes::FVector ViewX; Classes::FVector ViewY; Classes::FVector ViewZ; float FailedReachTime; Classes::FVector FailedReachLocation; float SightCounter; float RespawnPredictionTime; float InUseNodeCostMultiplier; int HighJumpNodeCostModifier; float LaneOffset; Classes::FRotator OldBasedRotation; int currentLaneSlot; int pathMatesCount; unsigned long bFrozen; unsigned long bPressedJump; unsigned long bDoubleJump; unsigned long bUpdatePosition; unsigned long bUpdating; unsigned long bNeverSwitchOnPickup; unsigned long bCheatFlying; unsigned long bCameraPositionLocked; unsigned long bShortConnectTimeOut; unsigned long bPendingDestroy; unsigned long bWasSpeedHack; unsigned long bWasSaturated; unsigned long bDynamicNetSpeed; unsigned long bAimingHelp; unsigned long bCinematicMode; unsigned long bCinemaDisableInputMove; unsigned long bCinemaDisableInputLook; unsigned long bReplicateAllPawns; unsigned long bIsUsingStreamingVolumes; unsigned long bIsExternalUIOpen; unsigned long bIsControllerConnected; unsigned long bCheckSoundOcclusion; unsigned long bLogHearSoundOverflow; unsigned long bCheckRelevancyThroughPortals; unsigned long bReceivedUniqueId; unsigned long bCanSeeLOI; float MaxResponseTime; float WaitDelay; Classes::TEnumAsByte<Classes::EDoubleClickDir> DoubleClickDir; unsigned char bIgnoreMoveInput; unsigned char bIgnoreLookInput; unsigned char bRun; unsigned char bDuck; unsigned char NetPlayerIndex; float FOVAngle; float DesiredFOV; float DefaultFOV; float LODDistanceFactor; Classes::FRotator TargetViewRotation; float TargetEyeHeight; Classes::FRotator BlendedTargetViewRotation; Classes::FVector LastAckedAccel; float CurrentTimeStamp; float LastUpdateTime; float ServerTimeStamp; float TimeMargin; float ClientUpdateTime; float MaxTimeMargin; float LastActiveTime; int ClientCap; float DynamicPingThreshold; float LastPingUpdate; float OldPing; float LastSpeedHackLog; float ProgressTimeOut; int GroundPitch; Classes::FVector OldFloor; Classes::FVector FailedPathStart; float InteractDistance; float LastBroadcastTime; float SpectatorCameraSpeed; float MinRespawnDelay; int MaxConcurrentHearSounds; unsigned long InfiniteAmmo; unsigned long bDebugPostProcessFreeFlight; unsigned long bReleasedJump; unsigned long bLeftThumbStickPassedDeadZone; unsigned long bRightThumbStickPassedDeadZone; unsigned long bDebugCloseCombat; unsigned long bDisableSkipCutscenes; unsigned long bReactionTime; unsigned long bOverrideReactionTimeSettings; unsigned long bJesusMode; unsigned long bStefanMode; unsigned long bIsWalking; unsigned long bIsStopping; unsigned long FailedToSpawn; unsigned long bDisableLoadFromLastCheckpoint; unsigned long bDebugSoundMixGroups; unsigned long bDebugSoundVelocity; unsigned long bDebugSoundReverbVolumes; unsigned long ControllerTilt; unsigned long VisualizeControllerTilt; unsigned long bRopeburnDisarmSucceeded; float TimePressedJump; float JumpTapTime; float BagSearchTapTime; float LastEmoteMessageTime; float AllowedEmoteMessageInterval; float TargetingPawnInterp; float TargetingCutoffAngle; Classes::FVector TargetActorLocation; float LookAtTimeDelay; Classes::TEnumAsByte<Classes::EMovementAction> MeleeLastAction; unsigned char bIgnoreButtonInput; Classes::TEnumAsByte<Classes::ESoundMode> CurrentSoundMode; Classes::TEnumAsByte<Classes::EWalkingState> CachedWalkingState; float CloseCombatMinRange; float CloseCombatMaxRange; float CloseCombatRangeTime; float CloseCombatMaxAngle; float CloseCombatPawnDistanceBias; float InputSize; float InputMaxSprintRaduisLimit; float InputMaxSprintHeightLimit; float InputMaxWalkRadiusLimit; float WallRunningAlignTime; int WallRunningAlignYaw; int LOIIndex; float ReactionTimeEnergy; float ReactionTimeSpawnLevel; float ReactionTimeDrain; float ReactionTimeMaxEffect; float ReactionTimeFadeIn; float ReactionTimeFadeOut; float ReactionTimeEnergyBuildRate; float WallClimbingDodgeJumpThreshold; float WallRunningDodgeJumpThreshold; float WalkCyclePart1; float WalkCyclePart2; float AccelerationTime; float StopAnimBlendIn; float StopAnimBlendOut; float StoppingVelocity; int NextLocalEnemyToCheckLOS; float LastEnemyNetSendTime; Classes::FRotator VehicleRotation; Classes::FRotator DriverRotation; int Team; float StickySpeed; float FOVZoomRate; float FOVZoomDelay; float MouseX; float MouseY; float ActualAccelX; float ActualAccelY; float ActualAccelZ; float SixAxisDisarmZ; float SixAxisDisarmY; float SixAxisRollZ; float SixAxisRollY; float DisarmTimeMultiplier; float LastZAxisTilt; float LastYAxisTilt;
		} Controller;

		struct {
			float SpeedModifier; float FrictionModifier; unsigned long bDebugMove; unsigned long bTriggersCompliment; unsigned long bDisableCollision; unsigned long bShouldHolsterWeapon; unsigned long bShouldUnzoom; unsigned long bIsTimedMove; unsigned long bConstrainLook; unsigned long bUseAbsoluteYawConstraint; unsigned long bDisableActorCollision; unsigned long bLookAtTargetLocation; unsigned long bLookAtTargetAngle; unsigned long bDisableFaceRotation; unsigned long bDisableControllerFacingPawnYawRotation; unsigned long bAvoidLedges; unsigned long bUsePreciseLocation; unsigned long bReachedPreciseLocation; unsigned long bDebugPreciseLocation; unsigned long bUsePreciseRotation; unsigned long bReachedPreciseRotation; unsigned long bDelayRotationAndLocationCallback; unsigned long bResetCameraLook; unsigned long bUseCustomCollision; unsigned long bUseCameraCollision; unsigned long bTwoHandedFullBodyAnimations; unsigned long bStickyAim; unsigned long bStopAfterMove; unsigned long bEnableFootPlacement; unsigned long bEnableAgainstWall; unsigned long bAllowPickup; float AiAimPenalty; float AiAimOneShotPenalty; Classes::TEnumAsByte<Classes::EMovementGroup> MovementGroup; Classes::TEnumAsByte<Classes::ESceneDepthPriorityGroup> FirstPersonDPG; Classes::TEnumAsByte<Classes::ESceneDepthPriorityGroup> FirstPersonLowerBodyDPG; Classes::TEnumAsByte<Classes::EPreciseLocationMode> PreciseLocationInterpMode; Classes::TEnumAsByte<Classes::EMoveAimMode> AimMode; float DisableMovementTime; float DisableLookTime; float LastCanDoMoveTime; float LastStopMoveTime; float MoveActiveTime; float RedoMoveTime; float PreciseLocationSpeed; Classes::FVector PreciseLocation; float PreciseRotationInterpolationTime; Classes::FRotator PreciseRotation; Classes::FVector LookAtTargetLocation; Classes::FRotator LookAtTargetAngle; float LookAtTargetInterpolationTime; float LookAtTargetDuration; float CancelResetCameraLookTime; float ResetCameraLookTime; Classes::FRotator MinLookConstraint; Classes::FRotator MaxLookConstraint; float CustomCollisionRadius; float CustomCollisionHeight; int WeaponInactivePitchAimingLimit; Classes::FVector RootMotionScale; Classes::FVector RootOffset; int SwanNeckEnableAtPitch; float SwanNeckForward; float SwanNeckDown; float AnimBlendTime; int StickyAngle; float StickyAimedModifier; float Timer; Classes::TEnumAsByte<Classes::EPhysics> PawnPhysics; float HandPlantExtentCheckHeight; float HandPlantExtentCheckWidth; float HandPlantCheckDistance; float HandPlantCheckHeight; float ContextMoveDistanceMultiplier; unsigned long bCheckForGrab; unsigned long bCheckForVaultOver; unsigned long bCheckForWallClimb; unsigned long bCheckForEdgeInVelDir; unsigned long bCheckExitToFalling; unsigned long bCheckExitToUncontrolledFalling; unsigned long bCheckForSoftLanding; float bDelayTimeCheckAutoMoves; float ExitToFallingZSpeed; float SoftLandingZSpeedThreshold; float TimeToSoftLandingThreshold; unsigned long bIsPlayingIdleAnim; float TriggerIdleAnimMinTime; float TriggerIdleAnimMaxTime;
		} Walking;

		struct {
			float SpeedModifier; float FrictionModifier; unsigned long bDebugMove; unsigned long bTriggersCompliment; unsigned long bDisableCollision; unsigned long bShouldHolsterWeapon; unsigned long bShouldUnzoom; unsigned long bIsTimedMove; unsigned long bConstrainLook; unsigned long bUseAbsoluteYawConstraint; unsigned long bDisableActorCollision; unsigned long bLookAtTargetLocation; unsigned long bLookAtTargetAngle; unsigned long bDisableFaceRotation; unsigned long bDisableControllerFacingPawnYawRotation; unsigned long bAvoidLedges; unsigned long bUsePreciseLocation; unsigned long bReachedPreciseLocation; unsigned long bDebugPreciseLocation; unsigned long bUsePreciseRotation; unsigned long bReachedPreciseRotation; unsigned long bDelayRotationAndLocationCallback; unsigned long bResetCameraLook; unsigned long bUseCustomCollision; unsigned long bUseCameraCollision; unsigned long bTwoHandedFullBodyAnimations; unsigned long bStickyAim; unsigned long bStopAfterMove; unsigned long bEnableFootPlacement; unsigned long bEnableAgainstWall; unsigned long bAllowPickup; float AiAimPenalty; float AiAimOneShotPenalty; Classes::TEnumAsByte<Classes::EMovementGroup> MovementGroup; Classes::TEnumAsByte<Classes::ESceneDepthPriorityGroup> FirstPersonDPG; Classes::TEnumAsByte<Classes::ESceneDepthPriorityGroup> FirstPersonLowerBodyDPG; Classes::TEnumAsByte<Classes::EPreciseLocationMode> PreciseLocationInterpMode; Classes::TEnumAsByte<Classes::EMoveAimMode> AimMode; float DisableMovementTime; float DisableLookTime; float LastCanDoMoveTime; float LastStopMoveTime; float MoveActiveTime; float RedoMoveTime; float PreciseLocationSpeed; Classes::FVector PreciseLocation; float PreciseRotationInterpolationTime; Classes::FRotator PreciseRotation; Classes::FVector LookAtTargetLocation; Classes::FRotator LookAtTargetAngle; float LookAtTargetInterpolationTime; float LookAtTargetDuration; float CancelResetCameraLookTime; float ResetCameraLookTime; Classes::FRotator MinLookConstraint; Classes::FRotator MaxLookConstraint; float CustomCollisionRadius; float CustomCollisionHeight; int WeaponInactivePitchAimingLimit; Classes::FVector RootMotionScale; Classes::FVector RootOffset; int SwanNeckEnableAtPitch; float SwanNeckForward; float SwanNeckDown; float AnimBlendTime; int StickyAngle; float StickyAimedModifier; float Timer; Classes::TEnumAsByte<Classes::EPhysics> PawnPhysics; float HandPlantExtentCheckHeight; float HandPlantExtentCheckWidth; float HandPlantCheckDistance; float HandPlantCheckHeight; float ContextMoveDistanceMultiplier; unsigned long bCheckForGrab; unsigned long bCheckForVaultOver; unsigned long bCheckForWallClimb; unsigned long bCheckForEdgeInVelDir; unsigned long bCheckExitToFalling; unsigned long bCheckExitToUncontrolledFalling; unsigned long bCheckForSoftLanding; float bDelayTimeCheckAutoMoves; float ExitToFallingZSpeed; float SoftLandingZSpeedThreshold; float TimeToSoftLandingThreshold; float StickyAimAfterAirTime; float AirTime; unsigned long bCloseToGround; Classes::TEnumAsByte<Classes::EMovement> PreviousMove;
		} Falling;

		struct {
			float SpeedModifier; float FrictionModifier; unsigned long bDebugMove; unsigned long bTriggersCompliment; unsigned long bDisableCollision; unsigned long bShouldHolsterWeapon; unsigned long bShouldUnzoom; unsigned long bIsTimedMove; unsigned long bConstrainLook; unsigned long bUseAbsoluteYawConstraint; unsigned long bDisableActorCollision; unsigned long bLookAtTargetLocation; unsigned long bLookAtTargetAngle; unsigned long bDisableFaceRotation; unsigned long bDisableControllerFacingPawnYawRotation; unsigned long bAvoidLedges; unsigned long bUsePreciseLocation; unsigned long bReachedPreciseLocation; unsigned long bDebugPreciseLocation; unsigned long bUsePreciseRotation; unsigned long bReachedPreciseRotation; unsigned long bDelayRotationAndLocationCallback; unsigned long bResetCameraLook; unsigned long bUseCustomCollision; unsigned long bUseCameraCollision; unsigned long bTwoHandedFullBodyAnimations; unsigned long bStickyAim; unsigned long bStopAfterMove; unsigned long bEnableFootPlacement; unsigned long bEnableAgainstWall; unsigned long bAllowPickup; float AiAimPenalty; float AiAimOneShotPenalty; Classes::TEnumAsByte<Classes::EMovementGroup> MovementGroup; Classes::TEnumAsByte<Classes::ESceneDepthPriorityGroup> FirstPersonDPG; Classes::TEnumAsByte<Classes::ESceneDepthPriorityGroup> FirstPersonLowerBodyDPG; Classes::TEnumAsByte<Classes::EPreciseLocationMode> PreciseLocationInterpMode; Classes::TEnumAsByte<Classes::EMoveAimMode> AimMode; float DisableMovementTime; float DisableLookTime; float LastCanDoMoveTime; float LastStopMoveTime; float MoveActiveTime; float RedoMoveTime; float PreciseLocationSpeed; Classes::FVector PreciseLocation; float PreciseRotationInterpolationTime; Classes::FRotator PreciseRotation; Classes::FVector LookAtTargetLocation; Classes::FRotator LookAtTargetAngle; float LookAtTargetInterpolationTime; float LookAtTargetDuration; float CancelResetCameraLookTime; float ResetCameraLookTime; Classes::FRotator MinLookConstraint; Classes::FRotator MaxLookConstraint; float CustomCollisionRadius; float CustomCollisionHeight; int WeaponInactivePitchAimingLimit; Classes::FVector RootMotionScale; Classes::FVector RootOffset; int SwanNeckEnableAtPitch; float SwanNeckForward; float SwanNeckDown; float AnimBlendTime; int StickyAngle; float StickyAimedModifier; float Timer; Classes::TEnumAsByte<Classes::EPhysics> PawnPhysics; float HandPlantExtentCheckHeight; float HandPlantExtentCheckWidth; float HandPlantCheckDistance; float HandPlantCheckHeight; float ContextMoveDistanceMultiplier; unsigned long bCheckForGrab; unsigned long bCheckForVaultOver; unsigned long bCheckForWallClimb; unsigned long bCheckForEdgeInVelDir; unsigned long bCheckExitToFalling; unsigned long bCheckExitToUncontrolledFalling; unsigned long bCheckForSoftLanding; float bDelayTimeCheckAutoMoves; float ExitToFallingZSpeed; float SoftLandingZSpeedThreshold; float TimeToSoftLandingThreshold; Classes::FVector GrabDesiredLedgeOffset; float GrabMaxAngle; float GrabMinGrabableZNormal; float HangFreeZDistanceCheck; float RelativeExtent; float DistanceToWallFromFeet; float StartTurningAngle; unsigned long bIsWithinForwardView; unsigned long bIsTurnedRight; unsigned long bSlopedLedge; unsigned long bClimpUpFoldedActionReceived; unsigned long bRequestDropDown; unsigned long bHangFreeVertigoEffect; unsigned long bGrabFromVerticalWallrun; unsigned long bGrabFromHighZSpeed; Classes::TEnumAsByte<Classes::EGrabType> GrabType; Classes::TEnumAsByte<Classes::EGrabType> PreviousGrabType; Classes::TEnumAsByte<Classes::EShimmyType> CurrentShimmyMove; Classes::TEnumAsByte<Classes::EGrabFoldedType> CurrentFoldedType; Classes::FRotator HangFreeMinLookContraint; Classes::FRotator HangFreeMaxLookContraint; Classes::FRotator SlopeMinLookContraint; Classes::FRotator SlopeMaxLookContraint; Classes::FRotator ShimmyAroundCornerMinLookContraint; Classes::FRotator ShimmyAroundCornerMaxLookContraint; Classes::FRotator ShimmyAroundCornerFreeMinLookContraint; Classes::FRotator ShimmyAroundCornerFreeMaxLookContraint; int TargetYaw; Classes::FVector TargetLocation; float ShimmyVelocity; float ShimmyTime; float LastShimmyTimeSeconds; float DisableShimmyTime; float StartLookingAtLedgeTime; float StopLookingAtLedgeTime;
		} Grabbing;

		struct {
			float SpeedModifier; float FrictionModifier; unsigned long bDebugMove; unsigned long bTriggersCompliment; unsigned long bDisableCollision; unsigned long bShouldHolsterWeapon; unsigned long bShouldUnzoom; unsigned long bIsTimedMove; unsigned long bConstrainLook; unsigned long bUseAbsoluteYawConstraint; unsigned long bDisableActorCollision; unsigned long bLookAtTargetLocation; unsigned long bLookAtTargetAngle; unsigned long bDisableFaceRotation; unsigned long bDisableControllerFacingPawnYawRotation; unsigned long bAvoidLedges; unsigned long bUsePreciseLocation; unsigned long bReachedPreciseLocation; unsigned long bDebugPreciseLocation; unsigned long bUsePreciseRotation; unsigned long bReachedPreciseRotation; unsigned long bDelayRotationAndLocationCallback; unsigned long bResetCameraLook; unsigned long bUseCustomCollision; unsigned long bUseCameraCollision; unsigned long bTwoHandedFullBodyAnimations; unsigned long bStickyAim; unsigned long bStopAfterMove; unsigned long bEnableFootPlacement; unsigned long bEnableAgainstWall; unsigned long bAllowPickup; float AiAimPenalty; float AiAimOneShotPenalty; Classes::TEnumAsByte<Classes::EMovementGroup> MovementGroup; Classes::TEnumAsByte<Classes::ESceneDepthPriorityGroup> FirstPersonDPG; Classes::TEnumAsByte<Classes::ESceneDepthPriorityGroup> FirstPersonLowerBodyDPG; Classes::TEnumAsByte<Classes::EPreciseLocationMode> PreciseLocationInterpMode; Classes::TEnumAsByte<Classes::EMoveAimMode> AimMode; float DisableMovementTime; float DisableLookTime; float LastCanDoMoveTime; float LastStopMoveTime; float MoveActiveTime; float RedoMoveTime; float PreciseLocationSpeed; Classes::FVector PreciseLocation; float PreciseRotationInterpolationTime; Classes::FRotator PreciseRotation; Classes::FVector LookAtTargetLocation; Classes::FRotator LookAtTargetAngle; float LookAtTargetInterpolationTime; float LookAtTargetDuration; float CancelResetCameraLookTime; float ResetCameraLookTime; Classes::FRotator MinLookConstraint; Classes::FRotator MaxLookConstraint; float CustomCollisionRadius; float CustomCollisionHeight; int WeaponInactivePitchAimingLimit; Classes::FVector RootMotionScale; Classes::FVector RootOffset; int SwanNeckEnableAtPitch; float SwanNeckForward; float SwanNeckDown; float AnimBlendTime; int StickyAngle; float StickyAimedModifier; float Timer; Classes::TEnumAsByte<Classes::EPhysics> PawnPhysics; float HandPlantExtentCheckHeight; float HandPlantExtentCheckWidth; float HandPlantCheckDistance; float HandPlantCheckHeight; float ContextMoveDistanceMultiplier; unsigned long bCheckForGrab; unsigned long bCheckForVaultOver; unsigned long bCheckForWallClimb; unsigned long bCheckForEdgeInVelDir; unsigned long bCheckExitToFalling; unsigned long bCheckExitToUncontrolledFalling; unsigned long bCheckForSoftLanding; float bDelayTimeCheckAutoMoves; float ExitToFallingZSpeed; float SoftLandingZSpeedThreshold; float TimeToSoftLandingThreshold; float WallClimbingVelocityStartLimit; float WallClimbingVerticalStartAngle; float WallClimbingVerticalFriction; float WallClimbingMaxDistance2D; float AddOnSpeed2DHeight; float AddOnSpeed2DMaxLimit; float AddOnSpeedZHeight; float AddOnSpeedZMaxLimit; float WallClimbingGravity; float MinLegdeZNormal; float MinWallHeight; float MinUpwardsVelocityToDoubleJump; float MaxIntoWallClimbVelocityToDoubleJump; unsigned long bHasReachedWall; unsigned long bFoundPossibleHandPlant; unsigned long bPerformedDoubleJump; Classes::FRotator LookAtEdgeAngle; Classes::FVector PossibleEdgeDestination; float IntoWallClimbSpeed; float GroundZLoc;
		} WallClimbing;

		struct {
			float SpeedModifier; float FrictionModifier; unsigned long bDebugMove; unsigned long bTriggersCompliment; unsigned long bDisableCollision; unsigned long bShouldHolsterWeapon; unsigned long bShouldUnzoom; unsigned long bIsTimedMove; unsigned long bConstrainLook; unsigned long bUseAbsoluteYawConstraint; unsigned long bDisableActorCollision; unsigned long bLookAtTargetLocation; unsigned long bLookAtTargetAngle; unsigned long bDisableFaceRotation; unsigned long bDisableControllerFacingPawnYawRotation; unsigned long bAvoidLedges; unsigned long bUsePreciseLocation; unsigned long bReachedPreciseLocation; unsigned long bDebugPreciseLocation; unsigned long bUsePreciseRotation; unsigned long bReachedPreciseRotation; unsigned long bDelayRotationAndLocationCallback; unsigned long bResetCameraLook; unsigned long bUseCustomCollision; unsigned long bUseCameraCollision; unsigned long bTwoHandedFullBodyAnimations; unsigned long bStickyAim; unsigned long bStopAfterMove; unsigned long bEnableFootPlacement; unsigned long bEnableAgainstWall; unsigned long bAllowPickup; float AiAimPenalty; float AiAimOneShotPenalty; Classes::TEnumAsByte<Classes::EMovementGroup> MovementGroup; Classes::TEnumAsByte<Classes::ESceneDepthPriorityGroup> FirstPersonDPG; Classes::TEnumAsByte<Classes::ESceneDepthPriorityGroup> FirstPersonLowerBodyDPG; Classes::TEnumAsByte<Classes::EPreciseLocationMode> PreciseLocationInterpMode; Classes::TEnumAsByte<Classes::EMoveAimMode> AimMode; float DisableMovementTime; float DisableLookTime; float LastCanDoMoveTime; float LastStopMoveTime; float MoveActiveTime; float RedoMoveTime; float PreciseLocationSpeed; Classes::FVector PreciseLocation; float PreciseRotationInterpolationTime; Classes::FRotator PreciseRotation; Classes::FVector LookAtTargetLocation; Classes::FRotator LookAtTargetAngle; float LookAtTargetInterpolationTime; float LookAtTargetDuration; float CancelResetCameraLookTime; float ResetCameraLookTime; Classes::FRotator MinLookConstraint; Classes::FRotator MaxLookConstraint; float CustomCollisionRadius; float CustomCollisionHeight; int WeaponInactivePitchAimingLimit; Classes::FVector RootMotionScale; Classes::FVector RootOffset; int SwanNeckEnableAtPitch; float SwanNeckForward; float SwanNeckDown; float AnimBlendTime; int StickyAngle; float StickyAimedModifier; float Timer; Classes::TEnumAsByte<Classes::EPhysics> PawnPhysics; float HandPlantExtentCheckHeight; float HandPlantExtentCheckWidth; float HandPlantCheckDistance; float HandPlantCheckHeight; float ContextMoveDistanceMultiplier; unsigned long bCheckForGrab; unsigned long bCheckForVaultOver; unsigned long bCheckForWallClimb; unsigned long bCheckForEdgeInVelDir; unsigned long bCheckExitToFalling; unsigned long bCheckExitToUncontrolledFalling; unsigned long bCheckForSoftLanding; float bDelayTimeCheckAutoMoves; float ExitToFallingZSpeed; float SoftLandingZSpeedThreshold; float TimeToSoftLandingThreshold; float WallRunningForwardCheckDistance; float WallRunningStrafeCheckDistance; float WallRunningVerticalCheckDistance; float WallRunningMinWallHeight; float WallRunningMinSpeed; float WallRunningVelocityStartLimit; float WallRunningVelocityStopLimit; float WallRunningForwardMinStartAngle; float WallRunningForwardMaxStartAngle; float WallRunningStrafeStartAngle; float WallRunningHorisontalFriction; float WallRunningHorisontalInitialZHeight; float WallRunningHorisontalAcceleration; float WallRunningHorisontalDeceleration; float WallRunningHorisontalAlignSpeed; float WallRunningIntoWallrunBlendInTime; float WallRunningIntoWallrunBlendOutTime; unsigned long PlayCameraHitWallEffect; unsigned long bHasReachedWall; unsigned long bStartMovingIntoWall; unsigned long bTurned90FromWall; unsigned long bChangedConstraints; float WallRunningDelayPawnRotationTime; float WallRunningDistanceForIntoWall; float WallRunningRotatePawnAlongWallTime; float WallRunningMoveToIntoPositionDegreeThreshold; float MinimumVelocityIntoWall; float MaximumVelocityIntoWall; float WallrunStartUpperBodyAnimPlayRate; float LookAlongWallInterpolationTime; float WallRunningBeginSpeed; Classes::TEnumAsByte<Classes::EMovement> NextMove; Classes::FVector WallNormal; Classes::FVector PredictedWallHitLocation; Classes::FVector IntoWallrunLocationTarget; int ConsequtiveWallruns; int MinContraintWorld; int MaxContraintWorld;
		} WallRunRight;

		struct {
			float SpeedModifier; float FrictionModifier; unsigned long bDebugMove; unsigned long bTriggersCompliment; unsigned long bDisableCollision; unsigned long bShouldHolsterWeapon; unsigned long bShouldUnzoom; unsigned long bIsTimedMove; unsigned long bConstrainLook; unsigned long bUseAbsoluteYawConstraint; unsigned long bDisableActorCollision; unsigned long bLookAtTargetLocation; unsigned long bLookAtTargetAngle; unsigned long bDisableFaceRotation; unsigned long bDisableControllerFacingPawnYawRotation; unsigned long bAvoidLedges; unsigned long bUsePreciseLocation; unsigned long bReachedPreciseLocation; unsigned long bDebugPreciseLocation; unsigned long bUsePreciseRotation; unsigned long bReachedPreciseRotation; unsigned long bDelayRotationAndLocationCallback; unsigned long bResetCameraLook; unsigned long bUseCustomCollision; unsigned long bUseCameraCollision; unsigned long bTwoHandedFullBodyAnimations; unsigned long bStickyAim; unsigned long bStopAfterMove; unsigned long bEnableFootPlacement; unsigned long bEnableAgainstWall; unsigned long bAllowPickup; float AiAimPenalty; float AiAimOneShotPenalty; Classes::TEnumAsByte<Classes::EMovementGroup> MovementGroup; Classes::TEnumAsByte<Classes::ESceneDepthPriorityGroup> FirstPersonDPG; Classes::TEnumAsByte<Classes::ESceneDepthPriorityGroup> FirstPersonLowerBodyDPG; Classes::TEnumAsByte<Classes::EPreciseLocationMode> PreciseLocationInterpMode; Classes::TEnumAsByte<Classes::EMoveAimMode> AimMode; float DisableMovementTime; float DisableLookTime; float LastCanDoMoveTime; float LastStopMoveTime; float MoveActiveTime; float RedoMoveTime; float PreciseLocationSpeed; Classes::FVector PreciseLocation; float PreciseRotationInterpolationTime; Classes::FRotator PreciseRotation; Classes::FVector LookAtTargetLocation; Classes::FRotator LookAtTargetAngle; float LookAtTargetInterpolationTime; float LookAtTargetDuration; float CancelResetCameraLookTime; float ResetCameraLookTime; Classes::FRotator MinLookConstraint; Classes::FRotator MaxLookConstraint; float CustomCollisionRadius; float CustomCollisionHeight; int WeaponInactivePitchAimingLimit; Classes::FVector RootMotionScale; Classes::FVector RootOffset; int SwanNeckEnableAtPitch; float SwanNeckForward; float SwanNeckDown; float AnimBlendTime; int StickyAngle; float StickyAimedModifier; float Timer; Classes::TEnumAsByte<Classes::EPhysics> PawnPhysics; float HandPlantExtentCheckHeight; float HandPlantExtentCheckWidth; float HandPlantCheckDistance; float HandPlantCheckHeight; float ContextMoveDistanceMultiplier; unsigned long bCheckForGrab; unsigned long bCheckForVaultOver; unsigned long bCheckForWallClimb; unsigned long bCheckForEdgeInVelDir; unsigned long bCheckExitToFalling; unsigned long bCheckExitToUncontrolledFalling; unsigned long bCheckForSoftLanding; float bDelayTimeCheckAutoMoves; float ExitToFallingZSpeed; float SoftLandingZSpeedThreshold; float TimeToSoftLandingThreshold; float WallRunningForwardCheckDistance; float WallRunningStrafeCheckDistance; float WallRunningVerticalCheckDistance; float WallRunningMinWallHeight; float WallRunningMinSpeed; float WallRunningVelocityStartLimit; float WallRunningVelocityStopLimit; float WallRunningForwardMinStartAngle; float WallRunningForwardMaxStartAngle; float WallRunningStrafeStartAngle; float WallRunningHorisontalFriction; float WallRunningHorisontalInitialZHeight; float WallRunningHorisontalAcceleration; float WallRunningHorisontalDeceleration; float WallRunningHorisontalAlignSpeed; float WallRunningIntoWallrunBlendInTime; float WallRunningIntoWallrunBlendOutTime; unsigned long PlayCameraHitWallEffect; unsigned long bHasReachedWall; unsigned long bStartMovingIntoWall; unsigned long bTurned90FromWall; unsigned long bChangedConstraints; float WallRunningDelayPawnRotationTime; float WallRunningDistanceForIntoWall; float WallRunningRotatePawnAlongWallTime; float WallRunningMoveToIntoPositionDegreeThreshold; float MinimumVelocityIntoWall; float MaximumVelocityIntoWall; float WallrunStartUpperBodyAnimPlayRate; float LookAlongWallInterpolationTime; float WallRunningBeginSpeed; Classes::TEnumAsByte<Classes::EMovement> NextMove; Classes::FVector WallNormal; Classes::FVector PredictedWallHitLocation; Classes::FVector IntoWallrunLocationTarget; int ConsequtiveWallruns; int MinContraintWorld; int MaxContraintWorld;
		} WallRunLeft;

		struct {
			float SpeedModifier; float FrictionModifier; unsigned long bDebugMove; unsigned long bTriggersCompliment; unsigned long bDisableCollision; unsigned long bShouldHolsterWeapon; unsigned long bShouldUnzoom; unsigned long bIsTimedMove; unsigned long bConstrainLook; unsigned long bUseAbsoluteYawConstraint; unsigned long bDisableActorCollision; unsigned long bLookAtTargetLocation; unsigned long bLookAtTargetAngle; unsigned long bDisableFaceRotation; unsigned long bDisableControllerFacingPawnYawRotation; unsigned long bAvoidLedges; unsigned long bUsePreciseLocation; unsigned long bReachedPreciseLocation; unsigned long bDebugPreciseLocation; unsigned long bUsePreciseRotation; unsigned long bReachedPreciseRotation; unsigned long bDelayRotationAndLocationCallback; unsigned long bResetCameraLook; unsigned long bUseCustomCollision; unsigned long bUseCameraCollision; unsigned long bTwoHandedFullBodyAnimations; unsigned long bStickyAim; unsigned long bStopAfterMove; unsigned long bEnableFootPlacement; unsigned long bEnableAgainstWall; unsigned long bAllowPickup; float AiAimPenalty; float AiAimOneShotPenalty; Classes::TEnumAsByte<Classes::EMovementGroup> MovementGroup; Classes::TEnumAsByte<Classes::ESceneDepthPriorityGroup> FirstPersonDPG; Classes::TEnumAsByte<Classes::ESceneDepthPriorityGroup> FirstPersonLowerBodyDPG; Classes::TEnumAsByte<Classes::EPreciseLocationMode> PreciseLocationInterpMode; Classes::TEnumAsByte<Classes::EMoveAimMode> AimMode; float DisableMovementTime; float DisableLookTime; float LastCanDoMoveTime; float LastStopMoveTime; float MoveActiveTime; float RedoMoveTime; float PreciseLocationSpeed; Classes::FVector PreciseLocation; float PreciseRotationInterpolationTime; Classes::FRotator PreciseRotation; Classes::FVector LookAtTargetLocation; Classes::FRotator LookAtTargetAngle; float LookAtTargetInterpolationTime; float LookAtTargetDuration; float CancelResetCameraLookTime; float ResetCameraLookTime; Classes::FRotator MinLookConstraint; Classes::FRotator MaxLookConstraint; float CustomCollisionRadius; float CustomCollisionHeight; int WeaponInactivePitchAimingLimit; Classes::FVector RootMotionScale; Classes::FVector RootOffset; int SwanNeckEnableAtPitch; float SwanNeckForward; float SwanNeckDown; float AnimBlendTime; int StickyAngle; float StickyAimedModifier; float Timer; Classes::TEnumAsByte<Classes::EPhysics> PawnPhysics; float HandPlantExtentCheckHeight; float HandPlantExtentCheckWidth; float HandPlantCheckDistance; float HandPlantCheckHeight; float ContextMoveDistanceMultiplier; unsigned long bCheckForGrab; unsigned long bCheckForVaultOver; unsigned long bCheckForWallClimb; unsigned long bCheckForEdgeInVelDir; unsigned long bCheckExitToFalling; unsigned long bCheckExitToUncontrolledFalling; unsigned long bCheckForSoftLanding; float bDelayTimeCheckAutoMoves; float ExitToFallingZSpeed; float SoftLandingZSpeedThreshold; float TimeToSoftLandingThreshold; float SpringBoardMaxHeight; float SpringBoardMinHeight; float SpringBoardJumpZ; float SpringBoardJumpXYAdd; float SpringBoardJumpXYMin; float IntermediateFootPlantHeight; float IntermediateFootPlantDistance; float CheckDistanceTime; Classes::FVector IntermediateFootPlantLedgeLocation; Classes::FVector SpringBoardFootPlantLedgeLocation; float StepTime1; float StepTime2; int SpringBoardState; int SavedInitialSpeed;
		} SpringBoarding;

		struct {
			float SpeedModifier; float FrictionModifier; unsigned long bDebugMove; unsigned long bTriggersCompliment; unsigned long bDisableCollision; unsigned long bShouldHolsterWeapon; unsigned long bShouldUnzoom; unsigned long bIsTimedMove; unsigned long bConstrainLook; unsigned long bUseAbsoluteYawConstraint; unsigned long bDisableActorCollision; unsigned long bLookAtTargetLocation; unsigned long bLookAtTargetAngle; unsigned long bDisableFaceRotation; unsigned long bDisableControllerFacingPawnYawRotation; unsigned long bAvoidLedges; unsigned long bUsePreciseLocation; unsigned long bReachedPreciseLocation; unsigned long bDebugPreciseLocation; unsigned long bUsePreciseRotation; unsigned long bReachedPreciseRotation; unsigned long bDelayRotationAndLocationCallback; unsigned long bResetCameraLook; unsigned long bUseCustomCollision; unsigned long bUseCameraCollision; unsigned long bTwoHandedFullBodyAnimations; unsigned long bStickyAim; unsigned long bStopAfterMove; unsigned long bEnableFootPlacement; unsigned long bEnableAgainstWall; unsigned long bAllowPickup; float AiAimPenalty; float AiAimOneShotPenalty; Classes::TEnumAsByte<Classes::EMovementGroup> MovementGroup; Classes::TEnumAsByte<Classes::ESceneDepthPriorityGroup> FirstPersonDPG; Classes::TEnumAsByte<Classes::ESceneDepthPriorityGroup> FirstPersonLowerBodyDPG; Classes::TEnumAsByte<Classes::EPreciseLocationMode> PreciseLocationInterpMode; Classes::TEnumAsByte<Classes::EMoveAimMode> AimMode; float DisableMovementTime; float DisableLookTime; float LastCanDoMoveTime; float LastStopMoveTime; float MoveActiveTime; float RedoMoveTime; float PreciseLocationSpeed; Classes::FVector PreciseLocation; float PreciseRotationInterpolationTime; Classes::FRotator PreciseRotation; Classes::FVector LookAtTargetLocation; Classes::FRotator LookAtTargetAngle; float LookAtTargetInterpolationTime; float LookAtTargetDuration; float CancelResetCameraLookTime; float ResetCameraLookTime; Classes::FRotator MinLookConstraint; Classes::FRotator MaxLookConstraint; float CustomCollisionRadius; float CustomCollisionHeight; int WeaponInactivePitchAimingLimit; Classes::FVector RootMotionScale; Classes::FVector RootOffset; int SwanNeckEnableAtPitch; float SwanNeckForward; float SwanNeckDown; float AnimBlendTime; int StickyAngle; float StickyAimedModifier; float Timer; Classes::TEnumAsByte<Classes::EPhysics> PawnPhysics; float HandPlantExtentCheckHeight; float HandPlantExtentCheckWidth; float HandPlantCheckDistance; float HandPlantCheckHeight; float ContextMoveDistanceMultiplier; unsigned long bCheckForGrab; unsigned long bCheckForVaultOver; unsigned long bCheckForWallClimb; unsigned long bCheckForEdgeInVelDir; unsigned long bCheckExitToFalling; unsigned long bCheckExitToUncontrolledFalling; unsigned long bCheckForSoftLanding; float bDelayTimeCheckAutoMoves; float ExitToFallingZSpeed; float SoftLandingZSpeedThreshold; float TimeToSoftLandingThreshold; float BaseJumpZ; float BaseJumpZHeavy; float JumpAddXY; float LongJumpSlowThreshold; float LongJumpNormalThreshold; float LongJumpFastThreshold; float JumpBlendInTime; float JumpBlendOutTime; float JumpStillBlendOutTime; float PreJumpMomentum; Classes::FVector WantedJumpVelocity; float CanDoMoveTaserLimit;
		} Jump;

		struct {
			float SpeedModifier; float FrictionModifier; unsigned long bDebugMove; unsigned long bTriggersCompliment; unsigned long bDisableCollision; unsigned long bShouldHolsterWeapon; unsigned long bShouldUnzoom; unsigned long bIsTimedMove; unsigned long bConstrainLook; unsigned long bUseAbsoluteYawConstraint; unsigned long bDisableActorCollision; unsigned long bLookAtTargetLocation; unsigned long bLookAtTargetAngle; unsigned long bDisableFaceRotation; unsigned long bDisableControllerFacingPawnYawRotation; unsigned long bAvoidLedges; unsigned long bUsePreciseLocation; unsigned long bReachedPreciseLocation; unsigned long bDebugPreciseLocation; unsigned long bUsePreciseRotation; unsigned long bReachedPreciseRotation; unsigned long bDelayRotationAndLocationCallback; unsigned long bResetCameraLook; unsigned long bUseCustomCollision; unsigned long bUseCameraCollision; unsigned long bTwoHandedFullBodyAnimations; unsigned long bStickyAim; unsigned long bStopAfterMove; unsigned long bEnableFootPlacement; unsigned long bEnableAgainstWall; unsigned long bAllowPickup; float AiAimPenalty; float AiAimOneShotPenalty; Classes::TEnumAsByte<Classes::EMovementGroup> MovementGroup; Classes::TEnumAsByte<Classes::ESceneDepthPriorityGroup> FirstPersonDPG; Classes::TEnumAsByte<Classes::ESceneDepthPriorityGroup> FirstPersonLowerBodyDPG; Classes::TEnumAsByte<Classes::EPreciseLocationMode> PreciseLocationInterpMode; Classes::TEnumAsByte<Classes::EMoveAimMode> AimMode; float DisableMovementTime; float DisableLookTime; float LastCanDoMoveTime; float LastStopMoveTime; float MoveActiveTime; float RedoMoveTime; float PreciseLocationSpeed; Classes::FVector PreciseLocation; float PreciseRotationInterpolationTime; Classes::FRotator PreciseRotation; Classes::FVector LookAtTargetLocation; Classes::FRotator LookAtTargetAngle; float LookAtTargetInterpolationTime; float LookAtTargetDuration; float CancelResetCameraLookTime; float ResetCameraLookTime; Classes::FRotator MinLookConstraint; Classes::FRotator MaxLookConstraint; float CustomCollisionRadius; float CustomCollisionHeight; int WeaponInactivePitchAimingLimit; Classes::FVector RootMotionScale; Classes::FVector RootOffset; int SwanNeckEnableAtPitch; float SwanNeckForward; float SwanNeckDown; float AnimBlendTime; int StickyAngle; float StickyAimedModifier; float Timer; Classes::TEnumAsByte<Classes::EPhysics> PawnPhysics; float HandPlantExtentCheckHeight; float HandPlantExtentCheckWidth; float HandPlantCheckDistance; float HandPlantCheckHeight; float ContextMoveDistanceMultiplier; unsigned long bCheckForGrab; unsigned long bCheckForVaultOver; unsigned long bCheckForWallClimb; unsigned long bCheckForEdgeInVelDir; unsigned long bCheckExitToFalling; unsigned long bCheckExitToUncontrolledFalling; unsigned long bCheckForSoftLanding; float bDelayTimeCheckAutoMoves; float ExitToFallingZSpeed; float SoftLandingZSpeedThreshold; float TimeToSoftLandingThreshold; float WallRunningPushAwaySpeedNoob; float WallRunningPushAwaySpeedProAdd; float WallRunningPushForwardSpeedMin; float WallRunningJumpOffZHeightForward; float WallRunningJumpOffZHeightMaxAddTurned; float WallRunningJumpOffZSpeed; int MinContraintWorld; int MaxContraintWorld;
		} WallRunJump;

		struct {
			float SpeedModifier; float FrictionModifier; unsigned long bDebugMove; unsigned long bTriggersCompliment; unsigned long bDisableCollision; unsigned long bShouldHolsterWeapon; unsigned long bShouldUnzoom; unsigned long bIsTimedMove; unsigned long bConstrainLook; unsigned long bUseAbsoluteYawConstraint; unsigned long bDisableActorCollision; unsigned long bLookAtTargetLocation; unsigned long bLookAtTargetAngle; unsigned long bDisableFaceRotation; unsigned long bDisableControllerFacingPawnYawRotation; unsigned long bAvoidLedges; unsigned long bUsePreciseLocation; unsigned long bReachedPreciseLocation; unsigned long bDebugPreciseLocation; unsigned long bUsePreciseRotation; unsigned long bReachedPreciseRotation; unsigned long bDelayRotationAndLocationCallback; unsigned long bResetCameraLook; unsigned long bUseCustomCollision; unsigned long bUseCameraCollision; unsigned long bTwoHandedFullBodyAnimations; unsigned long bStickyAim; unsigned long bStopAfterMove; unsigned long bEnableFootPlacement; unsigned long bEnableAgainstWall; unsigned long bAllowPickup; float AiAimPenalty; float AiAimOneShotPenalty; Classes::TEnumAsByte<Classes::EMovementGroup> MovementGroup; Classes::TEnumAsByte<Classes::ESceneDepthPriorityGroup> FirstPersonDPG; Classes::TEnumAsByte<Classes::ESceneDepthPriorityGroup> FirstPersonLowerBodyDPG; Classes::TEnumAsByte<Classes::EPreciseLocationMode> PreciseLocationInterpMode; Classes::TEnumAsByte<Classes::EMoveAimMode> AimMode; float DisableMovementTime; float DisableLookTime; float LastCanDoMoveTime; float LastStopMoveTime; float MoveActiveTime; float RedoMoveTime; float PreciseLocationSpeed; Classes::FVector PreciseLocation; float PreciseRotationInterpolationTime; Classes::FRotator PreciseRotation; Classes::FVector LookAtTargetLocation; Classes::FRotator LookAtTargetAngle; float LookAtTargetInterpolationTime; float LookAtTargetDuration; float CancelResetCameraLookTime; float ResetCameraLookTime; Classes::FRotator MinLookConstraint; Classes::FRotator MaxLookConstraint; float CustomCollisionRadius; float CustomCollisionHeight; int WeaponInactivePitchAimingLimit; Classes::FVector RootMotionScale; Classes::FVector RootOffset; int SwanNeckEnableAtPitch; float SwanNeckForward; float SwanNeckDown; float AnimBlendTime; int StickyAngle; float StickyAimedModifier; float Timer; Classes::TEnumAsByte<Classes::EPhysics> PawnPhysics; float HandPlantExtentCheckHeight; float HandPlantExtentCheckWidth; float HandPlantCheckDistance; float HandPlantCheckHeight; float ContextMoveDistanceMultiplier; unsigned long bCheckForGrab; unsigned long bCheckForVaultOver; unsigned long bCheckForWallClimb; unsigned long bCheckForEdgeInVelDir; unsigned long bCheckExitToFalling; unsigned long bCheckExitToUncontrolledFalling; unsigned long bCheckForSoftLanding; float bDelayTimeCheckAutoMoves; float ExitToFallingZSpeed; float SoftLandingZSpeedThreshold; float TimeToSoftLandingThreshold; float GrabJumpOffZHeight; float GrabJumpPushAwayMaxSpeed; float GrabJumpPushAwayMinSpeed; float GrabAllowedJumpAngle; Classes::FVector JumpVelocity; unsigned long TurnedLeft; int DeltaJumpYaw;
		} GrabJump;

		struct {
			float SpeedModifier; float FrictionModifier; unsigned long bDebugMove; unsigned long bTriggersCompliment; unsigned long bDisableCollision; unsigned long bShouldHolsterWeapon; unsigned long bShouldUnzoom; unsigned long bIsTimedMove; unsigned long bConstrainLook; unsigned long bUseAbsoluteYawConstraint; unsigned long bDisableActorCollision; unsigned long bLookAtTargetLocation; unsigned long bLookAtTargetAngle; unsigned long bDisableFaceRotation; unsigned long bDisableControllerFacingPawnYawRotation; unsigned long bAvoidLedges; unsigned long bUsePreciseLocation; unsigned long bReachedPreciseLocation; unsigned long bDebugPreciseLocation; unsigned long bUsePreciseRotation; unsigned long bReachedPreciseRotation; unsigned long bDelayRotationAndLocationCallback; unsigned long bResetCameraLook; unsigned long bUseCustomCollision; unsigned long bUseCameraCollision; unsigned long bTwoHandedFullBodyAnimations; unsigned long bStickyAim; unsigned long bStopAfterMove; unsigned long bEnableFootPlacement; unsigned long bEnableAgainstWall; unsigned long bAllowPickup; float AiAimPenalty; float AiAimOneShotPenalty; Classes::TEnumAsByte<Classes::EMovementGroup> MovementGroup; Classes::TEnumAsByte<Classes::ESceneDepthPriorityGroup> FirstPersonDPG; Classes::TEnumAsByte<Classes::ESceneDepthPriorityGroup> FirstPersonLowerBodyDPG; Classes::TEnumAsByte<Classes::EPreciseLocationMode> PreciseLocationInterpMode; Classes::TEnumAsByte<Classes::EMoveAimMode> AimMode; float DisableMovementTime; float DisableLookTime; float LastCanDoMoveTime; float LastStopMoveTime; float MoveActiveTime; float RedoMoveTime; float PreciseLocationSpeed; Classes::FVector PreciseLocation; float PreciseRotationInterpolationTime; Classes::FRotator PreciseRotation; Classes::FVector LookAtTargetLocation; Classes::FRotator LookAtTargetAngle; float LookAtTargetInterpolationTime; float LookAtTargetDuration; float CancelResetCameraLookTime; float ResetCameraLookTime; Classes::FRotator MinLookConstraint; Classes::FRotator MaxLookConstraint; float CustomCollisionRadius; float CustomCollisionHeight; int WeaponInactivePitchAimingLimit; Classes::FVector RootMotionScale; Classes::FVector RootOffset; int SwanNeckEnableAtPitch; float SwanNeckForward; float SwanNeckDown; float AnimBlendTime; int StickyAngle; float StickyAimedModifier; float Timer; Classes::TEnumAsByte<Classes::EPhysics> PawnPhysics; float HandPlantExtentCheckHeight; float HandPlantExtentCheckWidth; float HandPlantCheckDistance; float HandPlantCheckHeight; float ContextMoveDistanceMultiplier; unsigned long bCheckForGrab; unsigned long bCheckForVaultOver; unsigned long bCheckForWallClimb; unsigned long bCheckForEdgeInVelDir; unsigned long bCheckExitToFalling; unsigned long bCheckExitToUncontrolledFalling; unsigned long bCheckForSoftLanding; float bDelayTimeCheckAutoMoves; float ExitToFallingZSpeed; float SoftLandingZSpeedThreshold; float TimeToSoftLandingThreshold; float IntoGrabMaxAngle; float IntoGrabAlignSpeed; float IntoGrabMinInitialAlignSpeed; float GrabMinGrabableZNormal; Classes::FVector GrabDesiredLedgeOffset; float MinGrabLedgeAdjustDistance; float IntoGrabMaxDistance; float IntoGrabZVelocityThreshold; float IntoGrabSpeed; float HangFoldedDownwardSpeedLimit; float HangFoldedIntoGrabZSpeedThreshold; float HangFoldedIntoGrabSpeed2DThreshold; float HangFoldedUpperDeltaDistance; float HangFoldedLowerDeltaDistance; float HangFoldedMaxDistance; float HangImpactMinZSpeed; float HangHardImpactMinZSpeed; unsigned long bPrepareToGrab; unsigned long bSlopedLedge;
		} IntoGrab;

		struct {
			float SpeedModifier; float FrictionModifier; unsigned long bDebugMove; unsigned long bTriggersCompliment; unsigned long bDisableCollision; unsigned long bShouldHolsterWeapon; unsigned long bShouldUnzoom; unsigned long bIsTimedMove; unsigned long bConstrainLook; unsigned long bUseAbsoluteYawConstraint; unsigned long bDisableActorCollision; unsigned long bLookAtTargetLocation; unsigned long bLookAtTargetAngle; unsigned long bDisableFaceRotation; unsigned long bDisableControllerFacingPawnYawRotation; unsigned long bAvoidLedges; unsigned long bUsePreciseLocation; unsigned long bReachedPreciseLocation; unsigned long bDebugPreciseLocation; unsigned long bUsePreciseRotation; unsigned long bReachedPreciseRotation; unsigned long bDelayRotationAndLocationCallback; unsigned long bResetCameraLook; unsigned long bUseCustomCollision; unsigned long bUseCameraCollision; unsigned long bTwoHandedFullBodyAnimations; unsigned long bStickyAim; unsigned long bStopAfterMove; unsigned long bEnableFootPlacement; unsigned long bEnableAgainstWall; unsigned long bAllowPickup; float AiAimPenalty; float AiAimOneShotPenalty; Classes::TEnumAsByte<Classes::EMovementGroup> MovementGroup; Classes::TEnumAsByte<Classes::ESceneDepthPriorityGroup> FirstPersonDPG; Classes::TEnumAsByte<Classes::ESceneDepthPriorityGroup> FirstPersonLowerBodyDPG; Classes::TEnumAsByte<Classes::EPreciseLocationMode> PreciseLocationInterpMode; Classes::TEnumAsByte<Classes::EMoveAimMode> AimMode; float DisableMovementTime; float DisableLookTime; float LastCanDoMoveTime; float LastStopMoveTime; float MoveActiveTime; float RedoMoveTime; float PreciseLocationSpeed; Classes::FVector PreciseLocation; float PreciseRotationInterpolationTime; Classes::FRotator PreciseRotation; Classes::FVector LookAtTargetLocation; Classes::FRotator LookAtTargetAngle; float LookAtTargetInterpolationTime; float LookAtTargetDuration; float CancelResetCameraLookTime; float ResetCameraLookTime; Classes::FRotator MinLookConstraint; Classes::FRotator MaxLookConstraint; float CustomCollisionRadius; float CustomCollisionHeight; int WeaponInactivePitchAimingLimit; Classes::FVector RootMotionScale; Classes::FVector RootOffset; int SwanNeckEnableAtPitch; float SwanNeckForward; float SwanNeckDown; float AnimBlendTime; int StickyAngle; float StickyAimedModifier; float Timer; Classes::TEnumAsByte<Classes::EPhysics> PawnPhysics; float HandPlantExtentCheckHeight; float HandPlantExtentCheckWidth; float HandPlantCheckDistance; float HandPlantCheckHeight; float ContextMoveDistanceMultiplier; unsigned long bCheckForGrab; unsigned long bCheckForVaultOver; unsigned long bCheckForWallClimb; unsigned long bCheckForEdgeInVelDir; unsigned long bCheckExitToFalling; unsigned long bCheckExitToUncontrolledFalling; unsigned long bCheckForSoftLanding; float bDelayTimeCheckAutoMoves; float ExitToFallingZSpeed; float SoftLandingZSpeedThreshold; float TimeToSoftLandingThreshold;
		} Crouch;

		struct {
			float SpeedModifier; float FrictionModifier; unsigned long bDebugMove; unsigned long bTriggersCompliment; unsigned long bDisableCollision; unsigned long bShouldHolsterWeapon; unsigned long bShouldUnzoom; unsigned long bIsTimedMove; unsigned long bConstrainLook; unsigned long bUseAbsoluteYawConstraint; unsigned long bDisableActorCollision; unsigned long bLookAtTargetLocation; unsigned long bLookAtTargetAngle; unsigned long bDisableFaceRotation; unsigned long bDisableControllerFacingPawnYawRotation; unsigned long bAvoidLedges; unsigned long bUsePreciseLocation; unsigned long bReachedPreciseLocation; unsigned long bDebugPreciseLocation; unsigned long bUsePreciseRotation; unsigned long bReachedPreciseRotation; unsigned long bDelayRotationAndLocationCallback; unsigned long bResetCameraLook; unsigned long bUseCustomCollision; unsigned long bUseCameraCollision; unsigned long bTwoHandedFullBodyAnimations; unsigned long bStickyAim; unsigned long bStopAfterMove; unsigned long bEnableFootPlacement; unsigned long bEnableAgainstWall; unsigned long bAllowPickup; float AiAimPenalty; float AiAimOneShotPenalty; Classes::TEnumAsByte<Classes::EMovementGroup> MovementGroup; Classes::TEnumAsByte<Classes::ESceneDepthPriorityGroup> FirstPersonDPG; Classes::TEnumAsByte<Classes::ESceneDepthPriorityGroup> FirstPersonLowerBodyDPG; Classes::TEnumAsByte<Classes::EPreciseLocationMode> PreciseLocationInterpMode; Classes::TEnumAsByte<Classes::EMoveAimMode> AimMode; float DisableMovementTime; float DisableLookTime; float LastCanDoMoveTime; float LastStopMoveTime; float MoveActiveTime; float RedoMoveTime; float PreciseLocationSpeed; Classes::FVector PreciseLocation; float PreciseRotationInterpolationTime; Classes::FRotator PreciseRotation; Classes::FVector LookAtTargetLocation; Classes::FRotator LookAtTargetAngle; float LookAtTargetInterpolationTime; float LookAtTargetDuration; float CancelResetCameraLookTime; float ResetCameraLookTime; Classes::FRotator MinLookConstraint; Classes::FRotator MaxLookConstraint; float CustomCollisionRadius; float CustomCollisionHeight; int WeaponInactivePitchAimingLimit; Classes::FVector RootMotionScale; Classes::FVector RootOffset; int SwanNeckEnableAtPitch; float SwanNeckForward; float SwanNeckDown; float AnimBlendTime; int StickyAngle; float StickyAimedModifier; float Timer; float SlideAbortSpeed; float SlideAbortTime; float MaxFloorInclineZ; int SlideAngleTarget; unsigned long bGoingInto; unsigned long bRequestUncrouch;
		} Slide;

		struct {
			float SpeedModifier; float FrictionModifier; unsigned long bDebugMove; unsigned long bTriggersCompliment; unsigned long bDisableCollision; unsigned long bShouldHolsterWeapon; unsigned long bShouldUnzoom; unsigned long bIsTimedMove; unsigned long bConstrainLook; unsigned long bUseAbsoluteYawConstraint; unsigned long bDisableActorCollision; unsigned long bLookAtTargetLocation; unsigned long bLookAtTargetAngle; unsigned long bDisableFaceRotation; unsigned long bDisableControllerFacingPawnYawRotation; unsigned long bAvoidLedges; unsigned long bUsePreciseLocation; unsigned long bReachedPreciseLocation; unsigned long bDebugPreciseLocation; unsigned long bUsePreciseRotation; unsigned long bReachedPreciseRotation; unsigned long bDelayRotationAndLocationCallback; unsigned long bResetCameraLook; unsigned long bUseCustomCollision; unsigned long bUseCameraCollision; unsigned long bTwoHandedFullBodyAnimations; unsigned long bStickyAim; unsigned long bStopAfterMove; unsigned long bEnableFootPlacement; unsigned long bEnableAgainstWall; unsigned long bAllowPickup; float AiAimPenalty; float AiAimOneShotPenalty; Classes::TEnumAsByte<Classes::EMovementGroup> MovementGroup; Classes::TEnumAsByte<Classes::ESceneDepthPriorityGroup> FirstPersonDPG; Classes::TEnumAsByte<Classes::ESceneDepthPriorityGroup> FirstPersonLowerBodyDPG; Classes::TEnumAsByte<Classes::EPreciseLocationMode> PreciseLocationInterpMode; Classes::TEnumAsByte<Classes::EMoveAimMode> AimMode; float DisableMovementTime; float DisableLookTime; float LastCanDoMoveTime; float LastStopMoveTime; float MoveActiveTime; float RedoMoveTime; float PreciseLocationSpeed; Classes::FVector PreciseLocation; float PreciseRotationInterpolationTime; Classes::FRotator PreciseRotation; Classes::FVector LookAtTargetLocation; Classes::FRotator LookAtTargetAngle; float LookAtTargetInterpolationTime; float LookAtTargetDuration; float CancelResetCameraLookTime; float ResetCameraLookTime; Classes::FRotator MinLookConstraint; Classes::FRotator MaxLookConstraint; float CustomCollisionRadius; float CustomCollisionHeight; int WeaponInactivePitchAimingLimit; Classes::FVector RootMotionScale; Classes::FVector RootOffset; int SwanNeckEnableAtPitch; float SwanNeckForward; float SwanNeckDown; float AnimBlendTime; int StickyAngle; float StickyAimedModifier; float Timer; Classes::TEnumAsByte<Classes::EPhysics> PawnPhysics; float HandPlantExtentCheckHeight; float HandPlantExtentCheckWidth; float HandPlantCheckDistance; float HandPlantCheckHeight; float ContextMoveDistanceMultiplier; unsigned long bCheckForGrab; unsigned long bCheckForVaultOver; unsigned long bCheckForWallClimb; unsigned long bCheckForEdgeInVelDir; unsigned long bCheckExitToFalling; unsigned long bCheckExitToUncontrolledFalling; unsigned long bCheckForSoftLanding; float bDelayTimeCheckAutoMoves; float ExitToFallingZSpeed; float SoftLandingZSpeedThreshold; float TimeToSoftLandingThreshold; Classes::FVector HangOffset; float ZVelocityFallLimit; float IntoZiplineBlendInTime; float IntoZiplineBlendOutTime; float EnterZipLineParam; Classes::FVector SavedInitial2DVelocity; float SameZipLineRedoMoveTime;
		} IntoZipLine;

		struct {
			float SpeedModifier; float FrictionModifier; unsigned long bDebugMove; unsigned long bTriggersCompliment; unsigned long bDisableCollision; unsigned long bShouldHolsterWeapon; unsigned long bShouldUnzoom; unsigned long bIsTimedMove; unsigned long bConstrainLook; unsigned long bUseAbsoluteYawConstraint; unsigned long bDisableActorCollision; unsigned long bLookAtTargetLocation; unsigned long bLookAtTargetAngle; unsigned long bDisableFaceRotation; unsigned long bDisableControllerFacingPawnYawRotation; unsigned long bAvoidLedges; unsigned long bUsePreciseLocation; unsigned long bReachedPreciseLocation; unsigned long bDebugPreciseLocation; unsigned long bUsePreciseRotation; unsigned long bReachedPreciseRotation; unsigned long bDelayRotationAndLocationCallback; unsigned long bResetCameraLook; unsigned long bUseCustomCollision; unsigned long bUseCameraCollision; unsigned long bTwoHandedFullBodyAnimations; unsigned long bStickyAim; unsigned long bStopAfterMove; unsigned long bEnableFootPlacement; unsigned long bEnableAgainstWall; unsigned long bAllowPickup; float AiAimPenalty; float AiAimOneShotPenalty; Classes::TEnumAsByte<Classes::EMovementGroup> MovementGroup; Classes::TEnumAsByte<Classes::ESceneDepthPriorityGroup> FirstPersonDPG; Classes::TEnumAsByte<Classes::ESceneDepthPriorityGroup> FirstPersonLowerBodyDPG; Classes::TEnumAsByte<Classes::EPreciseLocationMode> PreciseLocationInterpMode; Classes::TEnumAsByte<Classes::EMoveAimMode> AimMode; float DisableMovementTime; float DisableLookTime; float LastCanDoMoveTime; float LastStopMoveTime; float MoveActiveTime; float RedoMoveTime; float PreciseLocationSpeed; Classes::FVector PreciseLocation; float PreciseRotationInterpolationTime; Classes::FRotator PreciseRotation; Classes::FVector LookAtTargetLocation; Classes::FRotator LookAtTargetAngle; float LookAtTargetInterpolationTime; float LookAtTargetDuration; float CancelResetCameraLookTime; float ResetCameraLookTime; Classes::FRotator MinLookConstraint; Classes::FRotator MaxLookConstraint; float CustomCollisionRadius; float CustomCollisionHeight; int WeaponInactivePitchAimingLimit; Classes::FVector RootMotionScale; Classes::FVector RootOffset; int SwanNeckEnableAtPitch; float SwanNeckForward; float SwanNeckDown; float AnimBlendTime; int StickyAngle; float StickyAimedModifier; float Timer; Classes::TEnumAsByte<Classes::EPhysics> PawnPhysics; float HandPlantExtentCheckHeight; float HandPlantExtentCheckWidth; float HandPlantCheckDistance; float HandPlantCheckHeight; float ContextMoveDistanceMultiplier; unsigned long bCheckForGrab; unsigned long bCheckForVaultOver; unsigned long bCheckForWallClimb; unsigned long bCheckForEdgeInVelDir; unsigned long bCheckExitToFalling; unsigned long bCheckExitToUncontrolledFalling; unsigned long bCheckForSoftLanding; float bDelayTimeCheckAutoMoves; float ExitToFallingZSpeed; float SoftLandingZSpeedThreshold; float TimeToSoftLandingThreshold; Classes::FVector HangOffset; float MinZipVelocity; float MinZipAcceleration; float CurrentParamOnCurve; float ZipFadeInTime; float ZipFadeOutTime; Classes::FVector CurrentLookAtPoint; unsigned long bZipLineLookAssist; Classes::TEnumAsByte<Classes::EZipLineStatus> ZipLineStatus;
		} ZipLine;

		struct {
			float SpeedModifier; float FrictionModifier; unsigned long bDebugMove; unsigned long bTriggersCompliment; unsigned long bDisableCollision; unsigned long bShouldHolsterWeapon; unsigned long bShouldUnzoom; unsigned long bIsTimedMove; unsigned long bConstrainLook; unsigned long bUseAbsoluteYawConstraint; unsigned long bDisableActorCollision; unsigned long bLookAtTargetLocation; unsigned long bLookAtTargetAngle; unsigned long bDisableFaceRotation; unsigned long bDisableControllerFacingPawnYawRotation; unsigned long bAvoidLedges; unsigned long bUsePreciseLocation; unsigned long bReachedPreciseLocation; unsigned long bDebugPreciseLocation; unsigned long bUsePreciseRotation; unsigned long bReachedPreciseRotation; unsigned long bDelayRotationAndLocationCallback; unsigned long bResetCameraLook; unsigned long bUseCustomCollision; unsigned long bUseCameraCollision; unsigned long bTwoHandedFullBodyAnimations; unsigned long bStickyAim; unsigned long bStopAfterMove; unsigned long bEnableFootPlacement; unsigned long bEnableAgainstWall; unsigned long bAllowPickup; float AiAimPenalty; float AiAimOneShotPenalty; Classes::TEnumAsByte<Classes::EMovementGroup> MovementGroup; Classes::TEnumAsByte<Classes::ESceneDepthPriorityGroup> FirstPersonDPG; Classes::TEnumAsByte<Classes::ESceneDepthPriorityGroup> FirstPersonLowerBodyDPG; Classes::TEnumAsByte<Classes::EPreciseLocationMode> PreciseLocationInterpMode; Classes::TEnumAsByte<Classes::EMoveAimMode> AimMode; float DisableMovementTime; float DisableLookTime; float LastCanDoMoveTime; float LastStopMoveTime; float MoveActiveTime; float RedoMoveTime; float PreciseLocationSpeed; Classes::FVector PreciseLocation; float PreciseRotationInterpolationTime; Classes::FRotator PreciseRotation; Classes::FVector LookAtTargetLocation; Classes::FRotator LookAtTargetAngle; float LookAtTargetInterpolationTime; float LookAtTargetDuration; float CancelResetCameraLookTime; float ResetCameraLookTime; Classes::FRotator MinLookConstraint; Classes::FRotator MaxLookConstraint; float CustomCollisionRadius; float CustomCollisionHeight; int WeaponInactivePitchAimingLimit; Classes::FVector RootMotionScale; Classes::FVector RootOffset; int SwanNeckEnableAtPitch; float SwanNeckForward; float SwanNeckDown; float AnimBlendTime; int StickyAngle; float StickyAimedModifier; float Timer; Classes::TEnumAsByte<Classes::EPhysics> PawnPhysics; float HandPlantExtentCheckHeight; float HandPlantExtentCheckWidth; float HandPlantCheckDistance; float HandPlantCheckHeight; float ContextMoveDistanceMultiplier; unsigned long bCheckForGrab; unsigned long bCheckForVaultOver; unsigned long bCheckForWallClimb; unsigned long bCheckForEdgeInVelDir; unsigned long bCheckExitToFalling; unsigned long bCheckExitToUncontrolledFalling; unsigned long bCheckForSoftLanding; float bDelayTimeCheckAutoMoves; float ExitToFallingZSpeed; float SoftLandingZSpeedThreshold; float TimeToSoftLandingThreshold; float Allowed2DTransferDistance; float AllowedZTransferDistance; Classes::FVector TransferLocation; Classes::FVector TransferNormal; Classes::FVector TransferLookAtLocation; Classes::FVector TransferLedgeNormal; Classes::TEnumAsByte<Classes::EMoveActionHint> TransferHint; Classes::TEnumAsByte<Classes::EMovement> TransferMove; float TransferSpeed; float TransferDistance; unsigned long bFitForGrab;
		} GrabTransfer;

		struct {
			float SpeedModifier; float FrictionModifier; unsigned long bDebugMove; unsigned long bTriggersCompliment; unsigned long bDisableCollision; unsigned long bShouldHolsterWeapon; unsigned long bShouldUnzoom; unsigned long bIsTimedMove; unsigned long bConstrainLook; unsigned long bUseAbsoluteYawConstraint; unsigned long bDisableActorCollision; unsigned long bLookAtTargetLocation; unsigned long bLookAtTargetAngle; unsigned long bDisableFaceRotation; unsigned long bDisableControllerFacingPawnYawRotation; unsigned long bAvoidLedges; unsigned long bUsePreciseLocation; unsigned long bReachedPreciseLocation; unsigned long bDebugPreciseLocation; unsigned long bUsePreciseRotation; unsigned long bReachedPreciseRotation; unsigned long bDelayRotationAndLocationCallback; unsigned long bResetCameraLook; unsigned long bUseCustomCollision; unsigned long bUseCameraCollision; unsigned long bTwoHandedFullBodyAnimations; unsigned long bStickyAim; unsigned long bStopAfterMove; unsigned long bEnableFootPlacement; unsigned long bEnableAgainstWall; unsigned long bAllowPickup; float AiAimPenalty; float AiAimOneShotPenalty; Classes::TEnumAsByte<Classes::EMovementGroup> MovementGroup; Classes::TEnumAsByte<Classes::ESceneDepthPriorityGroup> FirstPersonDPG; Classes::TEnumAsByte<Classes::ESceneDepthPriorityGroup> FirstPersonLowerBodyDPG; Classes::TEnumAsByte<Classes::EPreciseLocationMode> PreciseLocationInterpMode; Classes::TEnumAsByte<Classes::EMoveAimMode> AimMode; float DisableMovementTime; float DisableLookTime; float LastCanDoMoveTime; float LastStopMoveTime; float MoveActiveTime; float RedoMoveTime; float PreciseLocationSpeed; Classes::FVector PreciseLocation; float PreciseRotationInterpolationTime; Classes::FRotator PreciseRotation; Classes::FVector LookAtTargetLocation; Classes::FRotator LookAtTargetAngle; float LookAtTargetInterpolationTime; float LookAtTargetDuration; float CancelResetCameraLookTime; float ResetCameraLookTime; Classes::FRotator MinLookConstraint; Classes::FRotator MaxLookConstraint; float CustomCollisionRadius; float CustomCollisionHeight; int WeaponInactivePitchAimingLimit; Classes::FVector RootMotionScale; Classes::FVector RootOffset; int SwanNeckEnableAtPitch; float SwanNeckForward; float SwanNeckDown; float AnimBlendTime; int StickyAngle; float StickyAimedModifier; float Timer; Classes::TEnumAsByte<Classes::EPhysics> PawnPhysics; float HandPlantExtentCheckHeight; float HandPlantExtentCheckWidth; float HandPlantCheckDistance; float HandPlantCheckHeight; float ContextMoveDistanceMultiplier; unsigned long bCheckForGrab; unsigned long bCheckForVaultOver; unsigned long bCheckForWallClimb; unsigned long bCheckForEdgeInVelDir; unsigned long bCheckExitToFalling; unsigned long bCheckExitToUncontrolledFalling; unsigned long bCheckForSoftLanding; float bDelayTimeCheckAutoMoves; float ExitToFallingZSpeed; float SoftLandingZSpeedThreshold; float TimeToSoftLandingThreshold; float HeightBoostDuration; float TotalHeightBoost; float CoilMinTriggerSpeed; float CoilTime; float HeightBoostLeft;
		} Coil;

		struct {
			float SpeedModifier; float FrictionModifier; unsigned long bDebugMove; unsigned long bTriggersCompliment; unsigned long bDisableCollision; unsigned long bShouldHolsterWeapon; unsigned long bShouldUnzoom; unsigned long bIsTimedMove; unsigned long bConstrainLook; unsigned long bUseAbsoluteYawConstraint; unsigned long bDisableActorCollision; unsigned long bLookAtTargetLocation; unsigned long bLookAtTargetAngle; unsigned long bDisableFaceRotation; unsigned long bDisableControllerFacingPawnYawRotation; unsigned long bAvoidLedges; unsigned long bUsePreciseLocation; unsigned long bReachedPreciseLocation; unsigned long bDebugPreciseLocation; unsigned long bUsePreciseRotation; unsigned long bReachedPreciseRotation; unsigned long bDelayRotationAndLocationCallback; unsigned long bResetCameraLook; unsigned long bUseCustomCollision; unsigned long bUseCameraCollision; unsigned long bTwoHandedFullBodyAnimations; unsigned long bStickyAim; unsigned long bStopAfterMove; unsigned long bEnableFootPlacement; unsigned long bEnableAgainstWall; unsigned long bAllowPickup; float AiAimPenalty; float AiAimOneShotPenalty; Classes::TEnumAsByte<Classes::EMovementGroup> MovementGroup; Classes::TEnumAsByte<Classes::ESceneDepthPriorityGroup> FirstPersonDPG; Classes::TEnumAsByte<Classes::ESceneDepthPriorityGroup> FirstPersonLowerBodyDPG; Classes::TEnumAsByte<Classes::EPreciseLocationMode> PreciseLocationInterpMode; Classes::TEnumAsByte<Classes::EMoveAimMode> AimMode; float DisableMovementTime; float DisableLookTime; float LastCanDoMoveTime; float LastStopMoveTime; float MoveActiveTime; float RedoMoveTime; float PreciseLocationSpeed; Classes::FVector PreciseLocation; float PreciseRotationInterpolationTime; Classes::FRotator PreciseRotation; Classes::FVector LookAtTargetLocation; Classes::FRotator LookAtTargetAngle; float LookAtTargetInterpolationTime; float LookAtTargetDuration; float CancelResetCameraLookTime; float ResetCameraLookTime; Classes::FRotator MinLookConstraint; Classes::FRotator MaxLookConstraint; float CustomCollisionRadius; float CustomCollisionHeight; int WeaponInactivePitchAimingLimit; Classes::FVector RootMotionScale; Classes::FVector RootOffset; int SwanNeckEnableAtPitch; float SwanNeckForward; float SwanNeckDown; float AnimBlendTime; int StickyAngle; float StickyAimedModifier; float Timer; Classes::TEnumAsByte<Classes::EPhysics> PawnPhysics; float HandPlantExtentCheckHeight; float HandPlantExtentCheckWidth; float HandPlantCheckDistance; float HandPlantCheckHeight; float ContextMoveDistanceMultiplier; unsigned long bCheckForGrab; unsigned long bCheckForVaultOver; unsigned long bCheckForWallClimb; unsigned long bCheckForEdgeInVelDir; unsigned long bCheckExitToFalling; unsigned long bCheckExitToUncontrolledFalling; unsigned long bCheckForSoftLanding; float bDelayTimeCheckAutoMoves; float ExitToFallingZSpeed; float SoftLandingZSpeedThreshold; float TimeToSoftLandingThreshold; Classes::TEnumAsByte<Classes::EMeleeState> MeleeState; unsigned long bTargeting; unsigned long bHitDetection; float TargetingRotationSpeed; float TargetingMaxDistance; Classes::FVector HitDetectionStart; Classes::FVector HitDetectionLastStart; Classes::FVector TraceOffset; Classes::FVector TraceExtent; float MeleeDamage; float MaxMeleeDistance; float MaxMeleeAngle; float CanDoMoveTaserLimit; Classes::FVector WallrunNormal; unsigned long bLeft;
		} MeleeWallrun;

		struct {
			float SpeedModifier; float FrictionModifier; unsigned long bDebugMove; unsigned long bTriggersCompliment; unsigned long bDisableCollision; unsigned long bShouldHolsterWeapon; unsigned long bShouldUnzoom; unsigned long bIsTimedMove; unsigned long bConstrainLook; unsigned long bUseAbsoluteYawConstraint; unsigned long bDisableActorCollision; unsigned long bLookAtTargetLocation; unsigned long bLookAtTargetAngle; unsigned long bDisableFaceRotation; unsigned long bDisableControllerFacingPawnYawRotation; unsigned long bAvoidLedges; unsigned long bUsePreciseLocation; unsigned long bReachedPreciseLocation; unsigned long bDebugPreciseLocation; unsigned long bUsePreciseRotation; unsigned long bReachedPreciseRotation; unsigned long bDelayRotationAndLocationCallback; unsigned long bResetCameraLook; unsigned long bUseCustomCollision; unsigned long bUseCameraCollision; unsigned long bTwoHandedFullBodyAnimations; unsigned long bStickyAim; unsigned long bStopAfterMove; unsigned long bEnableFootPlacement; unsigned long bEnableAgainstWall; unsigned long bAllowPickup; float AiAimPenalty; float AiAimOneShotPenalty; Classes::TEnumAsByte<Classes::EMovementGroup> MovementGroup; Classes::TEnumAsByte<Classes::ESceneDepthPriorityGroup> FirstPersonDPG; Classes::TEnumAsByte<Classes::ESceneDepthPriorityGroup> FirstPersonLowerBodyDPG; Classes::TEnumAsByte<Classes::EPreciseLocationMode> PreciseLocationInterpMode; Classes::TEnumAsByte<Classes::EMoveAimMode> AimMode; float DisableMovementTime; float DisableLookTime; float LastCanDoMoveTime; float LastStopMoveTime; float MoveActiveTime; float RedoMoveTime; float PreciseLocationSpeed; Classes::FVector PreciseLocation; float PreciseRotationInterpolationTime; Classes::FRotator PreciseRotation; Classes::FVector LookAtTargetLocation; Classes::FRotator LookAtTargetAngle; float LookAtTargetInterpolationTime; float LookAtTargetDuration; float CancelResetCameraLookTime; float ResetCameraLookTime; Classes::FRotator MinLookConstraint; Classes::FRotator MaxLookConstraint; float CustomCollisionRadius; float CustomCollisionHeight; int WeaponInactivePitchAimingLimit; Classes::FVector RootMotionScale; Classes::FVector RootOffset; int SwanNeckEnableAtPitch; float SwanNeckForward; float SwanNeckDown; float AnimBlendTime; int StickyAngle; float StickyAimedModifier; float Timer; Classes::TEnumAsByte<Classes::EPhysics> PawnPhysics; float HandPlantExtentCheckHeight; float HandPlantExtentCheckWidth; float HandPlantCheckDistance; float HandPlantCheckHeight; float ContextMoveDistanceMultiplier; unsigned long bCheckForGrab; unsigned long bCheckForVaultOver; unsigned long bCheckForWallClimb; unsigned long bCheckForEdgeInVelDir; unsigned long bCheckExitToFalling; unsigned long bCheckExitToUncontrolledFalling; unsigned long bCheckForSoftLanding; float bDelayTimeCheckAutoMoves; float ExitToFallingZSpeed; float SoftLandingZSpeedThreshold; float TimeToSoftLandingThreshold; float JumpOffZHeight; float JumpPushAwaySpeed; float JumpTimeWindow; unsigned long bJumpingFromWall; Classes::FVector WantedJumpDir;
		} WallClimb180TurnJump;
	} Save;

	bool Initialize();
	std::string GetName();
};